plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.3"
    id("com.diffplug.spotless") version "6.23.3"
    id("io.micronaut.aot") version "4.3.3"
    id("io.micronaut.crac") version "4.3.3"
    id 'org.ajoberstar.grgit' version '4.0.2'
}

jar {
    archiveBaseName = 'spcv'
    version = '0.2'
    manifest {
        attributes 'Main-Class': 'com.spcv.Application'
    }
}

version = "0.2"
group = "com.spcv"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("io.micronaut.views:micronaut-views-fieldset")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("jakarta.validation:jakarta.validation-api")
    implementation("io.micronaut.crac:micronaut-crac")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client")
}


application {
    mainClass.set("com.spcv.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.spcv.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

tasks.register('setCommitId') {
    doLast {
        project.ext.set("commitId", grgit.head().abbreviatedId)
    }
}

tasks.withType(JavaCompile) {
    dependsOn 'setCommitId'
}